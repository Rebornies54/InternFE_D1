const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

console.log('üîß Update Email App Password');
console.log('============================\n');

console.log('üìã H∆∞·ªõng d·∫´n t·∫°o Gmail App Password:');
console.log('1. V√†o https://myaccount.google.com/');
console.log('2. Ch·ªçn "Security"');
console.log('3. B·∫≠t "2-Step Verification" n·∫øu ch∆∞a b·∫≠t');
console.log('4. Ch·ªçn "App passwords"');
console.log('5. T·∫°o app password cho "Mail"');
console.log('6. Copy password 16 k√Ω t·ª±\n');

rl.question('Nh·∫≠p App Password m·ªõi (16 k√Ω t·ª±): ', (appPassword) => {
  try {
    const envPath = path.join(__dirname, '..', '.env');
    
    // ƒê·ªçc file .env hi·ªán t·∫°i
    let envContent = fs.readFileSync(envPath, 'utf8');
    
    // Thay th·∫ø EMAIL_APP_PASSWORD
    const newEnvContent = envContent.replace(
      /EMAIL_APP_PASSWORD=.*/,
      `EMAIL_APP_PASSWORD=${appPassword}`
    );
    
    // Ghi l·∫°i file .env
    fs.writeFileSync(envPath, newEnvContent);
    
    console.log('\n‚úÖ App Password ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!');
    console.log('üîÑ Vui l√≤ng restart server: npm start');
    
    rl.close();
  } catch (error) {
    console.error('‚ùå L·ªói khi c·∫≠p nh·∫≠t:', error.message);
    rl.close();
  }
});
